function Game.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push constant 256
pop this 0
push constant 128
pop this 1
push constant 256
pop this 2
push constant 128
pop this 3
push constant 0
pop this 4
push argument 0
pop this 5
push this 5
push constant 30
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 30
pop this 5
label IF_FALSE0
push pointer 0
call Game.run 1
pop temp 0
push pointer 0
return
function Game.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Game.move 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 2
push constant 17
sub
push this 3
push constant 17
sub
push this 2
push constant 17
add
push this 3
push constant 17
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 4
push constant 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push constant 5
sub
push this 1
push constant 5
sub
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 5
sub
push this 1
push constant 7
add
push this 0
push constant 5
add
push this 1
push constant 17
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 7
add
push this 1
push constant 7
add
push this 0
push constant 17
add
push this 1
push constant 17
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 5
sub
push this 1
push constant 17
sub
push this 0
push constant 5
add
push this 1
push constant 7
sub
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE0
push this 4
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push constant 5
sub
push this 1
push constant 5
sub
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 5
sub
push this 1
push constant 7
add
push this 0
push constant 5
add
push this 1
push constant 17
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 17
sub
push this 1
push constant 17
sub
push this 0
push constant 7
sub
push this 1
push constant 7
sub
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 5
sub
push this 1
push constant 17
sub
push this 0
push constant 5
add
push this 1
push constant 7
sub
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE1
push this 4
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push constant 5
sub
push this 1
push constant 5
sub
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 17
sub
push this 1
push constant 5
sub
push this 0
push constant 7
sub
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 7
add
push this 1
push constant 5
sub
push this 0
push constant 17
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 17
sub
push this 1
push constant 7
add
push this 0
push constant 7
sub
push this 1
push constant 17
add
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE2
push this 4
push constant 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
push constant 5
sub
push this 1
push constant 5
sub
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 17
sub
push this 1
push constant 5
sub
push this 0
push constant 7
sub
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 7
add
push this 1
push constant 5
sub
push this 0
push constant 17
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push this 0
push constant 7
add
push this 1
push constant 17
sub
push this 0
push constant 17
add
push this 1
push constant 7
sub
call Screen.drawRectangle 4
pop temp 0
label IF_FALSE3
push constant 0
return
function Game.run 2
push argument 0
pop pointer 0
push constant 0
pop local 0
push pointer 0
call Game.move 1
pop temp 0
label WHILE_EXP0
push local 0
not
not
if-goto WHILE_END0
push this 1
push constant 17
sub
pop local 1
push this 0
pop this 2
push this 1
pop this 3
call Keyboard.keyPressed 0
push constant 131
eq
push local 1
push this 5
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
push this 5
sub
pop this 1
push pointer 0
call Game.move 1
pop temp 0
push constant 100
call Sys.wait 1
pop temp 0
label IF_FALSE0
call Keyboard.keyPressed 0
push constant 132
eq
push this 0
push this 5
add
push constant 495
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push this 5
add
pop this 0
push pointer 0
call Game.move 1
pop temp 0
push constant 100
call Sys.wait 1
pop temp 0
label IF_FALSE1
push this 0
push constant 17
sub
pop local 1
call Keyboard.keyPressed 0
push constant 130
eq
push local 1
push this 5
gt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push this 5
sub
pop this 0
push pointer 0
call Game.move 1
pop temp 0
push constant 100
call Sys.wait 1
pop temp 0
label IF_FALSE2
call Keyboard.keyPressed 0
push constant 133
eq
push this 1
push this 5
add
push constant 239
lt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 1
push this 5
add
pop this 1
push pointer 0
call Game.move 1
pop temp 0
push constant 100
call Sys.wait 1
pop temp 0
label IF_FALSE3
call Keyboard.keyPressed 0
push constant 82
eq
call Keyboard.keyPressed 0
push constant 114
eq
or
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 4
push constant 1
add
push this 4
push constant 1
add
push constant 4
call Math.divide 2
push constant 4
call Math.multiply 2
sub
pop this 4
push pointer 0
call Game.move 1
pop temp 0
push constant 150
call Sys.wait 1
pop temp 0
label IF_FALSE4
call Keyboard.keyPressed 0
push constant 140
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
pop local 0
label IF_FALSE5
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
