function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 1
push constant 0
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 1
add
push constant 14334
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.peek 0
push argument 0
push static 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 0
push static 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 5
push constant 0
not
pop local 4
push static 1
pop local 0
push constant 11111
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
push static 0
add
pop pointer 1
push that 0
pop local 1
push local 0
push constant 1
add
push static 0
add
pop pointer 1
push that 0
pop local 2
push local 1
call Output.printInt 1
pop temp 0
push local 2
push argument 0
push constant 2
add
lt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
add
push static 0
add
push local 2
push argument 0
sub
push constant 2
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 2
add
push argument 0
sub
pop local 3
push local 3
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
add
push static 0
add
push argument 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 2
add
return
label IF_FALSE0
push local 1
pop local 0
push local 0
push constant 0
eq
push local 4
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop local 4
call Memory.sort 0
pop temp 0
push constant 4
call String.new 1
push constant 115
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 116
call String.appendChar 2
call Output.printString 1
pop temp 0
push static 1
pop local 0
push constant 1234
return
label IF_FALSE1
goto WHILE_EXP0
label WHILE_END0
push static 1
return
function Memory.deAlloc 2
push static 1
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
push static 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push static 0
add
push argument 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
label IF_FALSE0
push local 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Memory.sort 6
push static 1
pop local 0
push local 0
pop local 3
push constant 12345
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
push static 0
add
pop pointer 1
push that 0
pop local 1
push local 0
pop local 2
push constant 1
call String.new 1
push constant 99
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 0
call Output.printInt 1
pop temp 0
label WHILE_EXP1
push local 1
push constant 0
eq
not
not
if-goto WHILE_END1
push local 1
call Output.printInt 1
pop temp 0
push constant 1
call String.new 1
push constant 45
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 1
push local 1
push constant 1
add
push static 0
add
pop pointer 1
push that 0
add
push constant 1
add
push local 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 2
call String.new 1
push constant 45
call String.appendChar 2
push constant 45
call String.appendChar 2
call Output.printString 1
pop temp 0
push local 1
call Output.printInt 1
pop temp 0
push local 2
push local 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
push static 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push local 3
push local 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push static 0
add
pop pointer 1
push that 0
pop local 4
push local 1
push static 0
add
push local 0
push static 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push static 0
add
push local 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END2
label IF_FALSE2
push local 3
push static 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push static 0
add
pop pointer 1
push that 0
pop local 4
push local 1
push static 0
add
push local 0
push static 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push static 0
add
push local 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END2
label IF_FALSE0
push local 5
push constant 5
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
return
label IF_FALSE3
push local 5
push constant 1
add
pop local 5
push local 1
pop local 2
push local 1
push static 0
add
pop pointer 1
push that 0
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
pop local 3
push local 0
push static 0
add
pop pointer 1
push that 0
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Memory.defrag 2
call Memory.sort 0
pop temp 0
push static 1
pop local 0
push local 0
push static 0
add
pop pointer 1
push that 0
pop local 1
label WHILE_EXP0
push local 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
push local 0
push constant 1
add
push static 0
add
pop pointer 1
push that 0
add
push local 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
add
push static 0
add
push local 0
push constant 1
add
push static 0
add
pop pointer 1
push that 0
push local 1
push constant 1
add
push static 0
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push static 0
add
push local 1
push static 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push static 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 1
pop local 0
push local 0
push static 0
add
pop pointer 1
push that 0
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Memory.memcpy 1
label WHILE_EXP0
push local 0
push argument 2
lt
not
if-goto WHILE_END0
push argument 1
push local 0
add
push static 0
add
push argument 0
push local 0
add
push static 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
